import datetime

def small(a,b):
    return a<b[0]
def big(a,b):
    return a>b[0]
def between(a,b):
    return a>b[0] and a<b[1]




def ma(df,step=[5,30],name=['short_ma','long_ma']):
    for i in len(name):
        df[name[i]]=pd.ewma(df['close'],  span= step[i])

    return


def macd(df,fastperiod=12, slowperiod=26):
    macd1, macdsignal, macdhist = ta.MACD(df['close'].values, fastperiod=fastperiod, slowperiod=slowperiod, signalperiod=9)
    df['MACDBar']=macdhist
    df['DIF']=macd1
    df['DEA']=macdsignal
    return
def ma_t(df,config,date):
    ma(df)
    short_ma,long_ma=df['short_ma','long_ma'].iloc[[-1]]
    return short_ma >= config[2] and long_ma <= config[3]


def macd_t(df,config,date):
    macd(df)
    dif,dea,macd=df['DIF','DEA','MACDBar'].iloc[[-1]]
    return dif >= config[2] and dif <= config[3] and dea == config[4]

def bench_t_s(config,date):
    conditions={'MA':ma_t,'MACD':macd_t}
    from AnyQuant import getBenchFromts
    start=date-time.timedelta(60)
    df=getBenchFromts(start=start,end=date)
    ans=True
    for con in config:
        ans=ans and conditions.get(con[0])(df,con,date)

    return ans



def asset_sort(list,config,info):
    map={}
    for id in list:
        num=info[['liquidAssets']][info.code == id]
        map[id]=num
    dict= sorted(map.iteritems(), key=lambda d:d[1], reverse = True)
    return dict.keys()




def macd_s(list,config,start=datetime.strptime('$root.strategyTest.start','%Y-%m-%d')):
    conditions={'<':small,'>':big,'<>':between}
    from pdCal import macd
    import AnyQuant
    start_date=start-datetime.timedelta(365)
    ans=[]
    for id in list:
        df=getSingleStock(id,start_date,start)
        macd(df)
        if conditions.get(config[1])(df['MACDBar'].iloc[[-1]],config[3:]) :
            ans.append(id)

    return ans
